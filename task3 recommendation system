import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import TfidfVectorizer

# Sample data
data = {
    'user_id': [1, 2, 3, 4],
    'preferences': [
        'action adventure thriller',
        'romantic comedy drama',
        'action thriller sci-fi',
        'comedy drama romance'
    ]
}

# Create DataFrame
df = pd.DataFrame(data)

# Create TF-IDF Vectorizer
tfidf = TfidfVectorizer()
tfidf_matrix = tfidf.fit_transform(df['preferences'])

# Calculate cosine similarity
cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)

# Function to get recommendations
def get_recommendations(user_id, cosine_sim=cosine_sim):
    idx = df.index[df['user_id'] == user_id].tolist()[0]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:]
    user_indices = [i[0] for i in sim_scores]
    return df['user_id'].iloc[user_indices]

# Example usage
recommended_users = get_recommendations(1)
print("Recommended users for user 1:", recommended_users.tolist())
